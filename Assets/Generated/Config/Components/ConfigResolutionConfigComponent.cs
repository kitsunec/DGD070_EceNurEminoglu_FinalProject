//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ConfigContext {

    public ConfigEntity resolutionConfigEntity { get { return GetGroup(ConfigMatcher.ResolutionConfig).GetSingleEntity(); } }
    public ResolutionConfigComponent resolutionConfig { get { return resolutionConfigEntity.resolutionConfig; } }
    public bool hasResolutionConfig { get { return resolutionConfigEntity != null; } }

    public ConfigEntity SetResolutionConfig(UnityEngine.Vector2Int newValue) {
        if (hasResolutionConfig) {
            throw new Entitas.EntitasException("Could not set ResolutionConfig!\n" + this + " already has an entity with ResolutionConfigComponent!",
                "You should check if the context already has a resolutionConfigEntity before setting it or use context.ReplaceResolutionConfig().");
        }
        var entity = CreateEntity();
        entity.AddResolutionConfig(newValue);
        return entity;
    }

    public void ReplaceResolutionConfig(UnityEngine.Vector2Int newValue) {
        var entity = resolutionConfigEntity;
        if (entity == null) {
            entity = SetResolutionConfig(newValue);
        } else {
            entity.ReplaceResolutionConfig(newValue);
        }
    }

    public void RemoveResolutionConfig() {
        resolutionConfigEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ConfigEntity {

    public ResolutionConfigComponent resolutionConfig { get { return (ResolutionConfigComponent)GetComponent(ConfigComponentsLookup.ResolutionConfig); } }
    public bool hasResolutionConfig { get { return HasComponent(ConfigComponentsLookup.ResolutionConfig); } }

    public void AddResolutionConfig(UnityEngine.Vector2Int newValue) {
        var index = ConfigComponentsLookup.ResolutionConfig;
        var component = (ResolutionConfigComponent)CreateComponent(index, typeof(ResolutionConfigComponent));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceResolutionConfig(UnityEngine.Vector2Int newValue) {
        var index = ConfigComponentsLookup.ResolutionConfig;
        var component = (ResolutionConfigComponent)CreateComponent(index, typeof(ResolutionConfigComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveResolutionConfig() {
        RemoveComponent(ConfigComponentsLookup.ResolutionConfig);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class ConfigMatcher {

    static Entitas.IMatcher<ConfigEntity> _matcherResolutionConfig;

    public static Entitas.IMatcher<ConfigEntity> ResolutionConfig {
        get {
            if (_matcherResolutionConfig == null) {
                var matcher = (Entitas.Matcher<ConfigEntity>)Entitas.Matcher<ConfigEntity>.AllOf(ConfigComponentsLookup.ResolutionConfig);
                matcher.componentNames = ConfigComponentsLookup.componentNames;
                _matcherResolutionConfig = matcher;
            }

            return _matcherResolutionConfig;
        }
    }
}
